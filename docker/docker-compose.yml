version: "3.9"

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      NODE_ENV: production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - dynamic-engine
    # scale with: docker compose up --scale app=3

  nginx:
    image: nginx:alpine
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - dynamic-engine

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/lib/letsencrypt; sleep 12h & wait $${!}; done;'
    networks:
      - dynamic-engine

  llama-server:
    build:
      context: ..
      dockerfile: docker/llama.cpp.Dockerfile
      args:
        LLAMA_CPP_COMMIT: 72b24d96c6888c609d562779a23787304ae4609c
    environment:
      # Provide either LLAMA_MODEL or LLAMA_HF_REPO (plus optional LLAMA_HF_*).
      LLAMA_MODEL: /models/your-model.gguf
      # LLAMA_HF_REPO: ggml-org/gemma-3-1b-it-GGUF
      LLAMA_SERVER_PORT: 8081
    command: ["--ctx-size", "4096"]
    volumes:
      - type: bind
        source: ./models
        target: /models
        read_only: true
    ports:
      - "8081:8081"
    profiles: ["llama"]
    networks:
      - dynamic-engine

volumes:
  certbot-etc:
  certbot-var:

networks:
  dynamic-engine:
    name: dynamic-engine
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.65.0/24
