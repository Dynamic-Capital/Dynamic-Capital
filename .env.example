# Base application context
NODE_ENV=development
NEXT_PUBLIC_ENV=development
NEXT_PUBLIC_COMMIT_SHA=

# API caching
CACHE_TTL_SECONDS=300
DYNAMIC_API_CACHE_TTL_SECONDS=120
DYNAMIC_REST_CACHE_TTL_SECONDS=300

# Supabase (shared across apps and functions)
# Use placeholder values here; never commit real credentials.
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_PROJECT_REF=
SUPABASE_PROJECT_ID=
SUPABASE_DB_PASSWORD=
SUPABASE_ANON_KEY=
SUPABASE_SERVICE_ROLE=
# Backwards compatibility alias kept for existing scripts
SUPABASE_SERVICE_ROLE_KEY=
# Used by NextAuth's Supabase adapter. Provide the production service role key via secrets management.
SUPABASE_DB_URL=
SUPABASE_FN_URL=
SUPABASE_ACCESS_TOKEN=
DATABASE_URL=
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co
# Safe to expose in clients, but keep a placeholder to avoid copying live keys.
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Deployment platform access
DO_APP_ID=
DO_API_TOKEN=
VERCEL_TOKEN=
DIGITALOCEAN_TOKEN=

# Observability and release metadata
SENTRY_DSN=
NEXT_PUBLIC_SENTRY_DSN=
NEXT_PUBLIC_POSTHOG_KEY=
NEXT_PUBLIC_POSTHOG_HOST=
LOGTAIL_SOURCE_TOKEN=
LOGTAIL_URL=
LOG_LEVEL=
NODE_EXTRA_CA_CERTS=

# Domains and routing
DOMAIN=example.com
SITE_URL=https://example.com/
NEXT_PUBLIC_SITE_URL=https://example.com/
NEXT_PUBLIC_API_URL=https://api.example.com
ALLOWED_ORIGINS=https://example.com,https://api.example.com

# Commit + health endpoints
HEALTH_URL=

# Telegram bot + mini app
# Populate these only in secure env vars; never commit live tokens.
TELEGRAM_BOT_TOKEN=
TELEGRAM_APP_ID=
TELEGRAM_APP_HASH=
TELEGRAM_WEBHOOK_SECRET=
TELEGRAM_WEBHOOK_URL=
TELEGRAM_WEBHOOK_HEALTH_URL=
TELEGRAM_BOT_USERNAME=
TELEGRAM_BOT_URL=
TELEGRAM_ADMIN_IDS=
NEXT_PUBLIC_TELEGRAM_WEBHOOK_SECRET=
TELEGRAM_ID=
APP_URL=
NEXT_PUBLIC_MINI_APP_URL=
MINI_APP_URL=
MINI_APP_SHORT_NAME=
MINIAPP_ORIGIN=
SESSION_JWT_SECRET=
ADMIN_API_SECRET=

# Session lifecycle configuration
SESSION_TIMEOUT_MINUTES=30
FOLLOW_UP_DELAY_MINUTES=10
MAX_FOLLOW_UPS=3

# Payments
BINANCE_PAY_API_KEY=
BINANCE_PAY_SECRET=
USDT_TRC20_ADDRESS=
AMOUNT_TOLERANCE=
WINDOW_SECONDS=
RATE_LIMIT_PER_MINUTE=
BENEFICIARY_TABLE=

# Market data providers
CRYPTOCOMPARE_API_KEY=
KAIKO_API_KEY=
POLYGON_API_KEY=
SUPABASE_ALERTS_TABLE=

# Economic calendar (public)
NEXT_PUBLIC_ECONOMIC_CALENDAR_URL=
NEXT_PUBLIC_ECONOMIC_CALENDAR_API_KEY=

# Trading & bridge connectivity
TRADINGVIEW_WEBHOOK_SECRET=
TRADINGVIEW_WEBHOOK_URL=https://www.tradingview.com/u/DynamicCapital-FX/
TRADING_SIGNALS_WEBHOOK_SECRET=
SUPABASE_TRADING_SIGNAL_SECRET=
SUPABASE_TRADING_SIGNAL_URL=
SUPABASE_WEBHOOK_TIMEOUT=5
SUPABASE_SIGNALS_CHANNEL=
EXNESS_MT5_LOGIN=
EXNESS_MT5_PASSWORD=
EXNESS_MT5_SERVER=
MT5_BRIDGE_WORKER_ID=
BRIDGE_HOST=
BRIDGE_USER=
BRIDGE_SSH_KEY=
METAQUOTES_ID=F83593E4

# Treasury buyback bot
BUYBACK_VENUE_ALLOWLIST=
BUYBACK_VENUE_CAPS=
BUYBACK_RATE_LIMIT_PER_MINUTE=

# Market intelligence collectors
TRADINGVIEW_USERNAME=
SUPABASE_ANALYSIS_FN_URL=
TRADINGVIEW_LOG_LEVEL=INFO
NEWSAPI_API_KEY=
NEWSAPI_CATEGORY=business
NEWSAPI_LANGUAGE=en
NEWSAPI_PAGE_SIZE=50
FINNHUB_API_KEY=
SENTIMENT_SYMBOLS=BTCUSD,ETHUSD,EURUSD
REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=
REDDIT_USER_AGENT=dynamic-capital/1.0
REDDIT_SUBREDDITS=wallstreetbets,forex
TWITTER_BEARER_TOKEN=
TWITTER_SENTIMENT_QUERY=(forex OR crypto) lang:en

# AI integrations
OPENAI_API_KEY=
# Optional: override the default model when relaying to the OpenAI Realtime API
OPENAI_REALTIME_MODEL=
OPENAI_WEBHOOK_SECRET=
OPENAI_ENABLED=false
ANTHROPIC_API_KEY=
GROQ_API_KEY=
HUGGINGFACE_ACCESS_TOKEN=
# Legacy alias also supported for the Hugging Face provider
HUGGINGFACE_API_KEY=
# Optional overrides for the default Hugging Face model and endpoint
HUGGINGFACE_CHAT_MODEL=
HUGGINGFACE_CHAT_URL=
FAQ_ENABLED=false
DYNAMIC_AI_CHAT_URL=
DYNAMIC_AI_CHAT_KEY=
DYNAMIC_AI_CHAT_TIMEOUT_MS=30000
DYNAMIC_AI_CHAT_USER_LIMIT=20
DYNAMIC_AI_CHAT_USER_WINDOW_SECONDS=60
DYNAMIC_AI_CHAT_SESSION_LIMIT=60
DYNAMIC_AI_CHAT_SESSION_WINDOW_SECONDS=300
DYNAMIC_AGI_CHAT_URL=
DYNAMIC_AGI_CHAT_KEY=
DYNAMIC_AGI_CHAT_TIMEOUT_MS=45000
DYNAMIC_AGS_PLAYBOOK_URL=
DYNAMIC_AGS_PLAYBOOK_KEY=
DYNAMIC_AGS_TIMEOUT_MS=45000

# Economic data providers
FRED_API_KEY=
TRADING_ECONOMICS_CLIENT_ID=
TRADING_ECONOMICS_CLIENT_SECRET=

# Storage/CDN
CDN_BUCKET=
CDN_REGION=
CDN_ENDPOINT=
CDN_ACCESS_KEY=
CDN_SECRET_KEY=
CDN_ENDPOINT_ID=
CDN_PURGE_PATHS=

# Microsoft OneDrive
ONEDRIVE_TENANT_ID=
ONEDRIVE_CLIENT_ID=
ONEDRIVE_CLIENT_SECRET=
ONEDRIVE_SCOPE=https://graph.microsoft.com/.default
ONEDRIVE_DEFAULT_DRIVE_ID=

# Node orchestration overrides
NODE_CONFIG__HUMAN_ANALYSIS='{"node_id":"human-analysis","type":"processing","enabled":true,"interval_sec":21600,"dependencies":[],"outputs":["fusion"],"metadata":{"source":"analyst_insights"},"weight":0.25}'
NODE_CONFIG__DYNAMIC_HEDGE='{"node_id":"dynamic-hedge","type":"policy","enabled":true,"interval_sec":300,"dependencies":["trades","correlations","risk_settings"],"outputs":["hedge_actions","signals"],"metadata":{"description":"Dynamic hedge model evaluating volatility, drawdown, and news triggers","confidence":0.9},"weight":0.9}'
NODE_CONFIG__TON_NETWORK_HEALTH='{"node_id":"ton-network-health","type":"ingestion","enabled":true,"interval_sec":120,"dependencies":[],"outputs":["ton_network_metrics"],"metadata":{"description":"Poll validator RPC endpoints for block lag, peers, and resource telemetry.","dashboards":["grafana:TON/Node","grafana:TON/Storage"],"alert_routes":["pagerduty:on-call","slack:#ton-ops"]},"weight":0.6}'
NODE_CONFIG__TON_LIQUIDITY_INGESTION='{"node_id":"ton-liquidity-ingestion","type":"ingestion","enabled":true,"interval_sec":300,"dependencies":["ton_network_metrics"],"outputs":["ton_liquidity_curves"],"metadata":{"description":"Ingest DEX pool depth and fee telemetry from STON.fi and DeDust.","venues":["stonfi","dedust"]},"weight":0.5}'
NODE_CONFIG__TON_WALLET_AUDIT='{"node_id":"ton-wallet-audit","type":"processing","enabled":true,"interval_sec":600,"dependencies":["ton_network_metrics"],"outputs":["ton_wallet_balances"],"metadata":{"description":"Reconcile treasury and operations wallets against Supabase tx logs.","supabase_tables":["tx_logs","wallet_limits"]},"weight":0.4}'
NODE_CONFIG__TON_FEATURE_ENGINEER='{"node_id":"ton-feature-engineer","type":"processing","enabled":true,"interval_sec":900,"dependencies":["ton_liquidity_curves","ton_network_metrics","ton_wallet_balances"],"outputs":["ton_feature_windows"],"metadata":{"description":"Transform raw TON telemetry into modelling features and rolling aggregates.","feature_windows":["1h","6h","24h"]},"weight":0.7}'
NODE_CONFIG__TON_EXECUTION_PLANNER='{"node_id":"ton-execution-planner","type":"policy","enabled":true,"interval_sec":600,"dependencies":["ton_feature_windows"],"outputs":["ton_execution_actions","ton_alerts"],"metadata":{"description":"Run DynamicTonEngine to propose liquidity and treasury actions.","playbooks":["docs/ton-node-monitoring.md","docs/ton-infrastructure-config.md"]},"weight":0.9}'
NODE_CONFIG__TON_OPS_BRIEFING='{"node_id":"ton-ops-briefing","type":"community","enabled":true,"interval_sec":3600,"dependencies":["ton_execution_actions","ton_alerts"],"outputs":["ton_ops_digest"],"metadata":{"description":"Summarise TON actions and alerts for operations handovers.","channels":["notion:runbook","slack:#ops-daily"]},"weight":0.3}'

# Optional overrides for integration tests and provisioning scripts
FUNCTIONS_BASE=
FUNCTIONS_BASE_URL=
A_SUPABASE_URL=
A_SUPABASE_KEY=

# GitHub OAuth (NextAuth)
# Required for the GitHub login provider in NextAuth. Use sandbox credentials for local runs.
GITHUB_PAT=
GITHUB_REPO=
GITHUB_DEFAULT_BRANCH=
# OAuth app keys must be present for production and CI builds.
GITHUB_ID=
GH_TOKEN=
GITHUB_SECRET=
