{
  "name": "dynamic-capital",
  "private": true,
  "workspaces": [
    "apps/*"
  ],
  "engines": {
    "node": "^20"
  },
  "type": "module",
  "scripts": {
    "build": "node scripts/npm-safe.mjs run build:web && node scripts/npm-safe.mjs run build:landing",
    "build:landing": "node scripts/npm-safe.mjs -w apps/landing run build",
    "build:web": "node scripts/npm-safe.mjs -w apps/web run build",
    "build:dynamic-ai": "node scripts/dynamic-ai-phased-build.mjs",
    "build:miniapp": "bash scripts/build-miniapp.sh",
    "build:dev": "vite build --mode development",
    "start": "node scripts/npm-safe.mjs -w apps/web run start",
    "start:web": "node scripts/npm-safe.mjs -w apps/web run start",
    "start:do": "HOST=0.0.0.0 HOSTNAME=0.0.0.0 NODE_ENV=production node apps/web/.next/standalone/apps/web/server.js",
    "dev": "node scripts/npm-safe.mjs -w apps/web run dev --",
    "dev:lovable": "node lovable-dev.js",
    "codex:post-pull": "node scripts/codex-workflow.js post-pull",
    "codex:dev": "node scripts/codex-workflow.js dev",
    "codex:build": "node scripts/codex-workflow.js build",
    "codex:verify": "node scripts/codex-workflow.js verify",
    "changes": "node scripts/run-changes.mjs",
    "lint": "node scripts/npm-safe.mjs -w apps/web run lint",
    "format": "deno fmt apps supabase scripts db docs",
    "typecheck": "node scripts/npm-safe.mjs -w apps/web run typecheck",
    "debug": "NODE_OPTIONS='--inspect' node scripts/npm-safe.mjs run dev",
    "preview": "node scripts/npm-safe.mjs run dev",
    "upload-assets": "node scripts/upload-assets.js",
    "upload-assets:watch": "chokidar '_static/**/*' -c 'node scripts/npm-safe.mjs run upload-assets'",
    "docs:summary": "deno run -A scripts/generate-repo-summary.ts",
    "docs:toc": "tsx scripts/docs/update-toc.ts README.md docs/dynamic-capital-playbook.md docs/dynamic-capital-wisdom-playbook.md docs/api-documentation.md",
    "docs:organize": "$(bash scripts/deno_bin.sh) run -A scripts/repo-file-organizer.ts",
    "docs:catalog": "deno run -A scripts/generate-docs-organizer.ts",
    "docs:project-scan": "$(bash scripts/deno_bin.sh) run -A scripts/project/generate-project-scan.ts",
    "docs:whitepapers": "tsx scripts/whitepaper/generate.ts",
    "drizzle:migrations:validate": "deno run -A scripts/validate-drizzle-migrations.ts",
    "proj:collect": "tsx scripts/project/collect-conventional-commits.ts",
    "proj:notes": "tsx scripts/project/generate-release-notes.ts",
    "proj:readme": "tsx scripts/project/update-readme.ts",
    "proj:features": "tsx scripts/project/update-features-roadmap.ts",
    "proj:projects": "tsx scripts/project/projects-v2-update.ts",
    "proj:announce": "tsx scripts/project/release-announcer.ts",
    "proj:update-all": "npm run proj:collect && npm run proj:notes && npm run proj:readme && npm run proj:features && npm run proj:projects && npm run proj:announce",
    "test": "node scripts/check-static-homepage.js && deno test --sloppy-imports --no-lock --no-npm --node-modules-dir=false --unsafely-ignore-certificate-errors -A --no-check",
    "verify": "bash scripts/verify/verify_all.sh",
    "smoke:tunnel": "node scripts/smoke-tunnel.mjs",
    "audit": "npm audit",
    "audit:fix": "npm audit fix",
    "sync-env": "deno run -A scripts/sync-env.ts",
    "env:validate": "tsx scripts/env/validate.ts",
    "env:sync": "tsx scripts/env/sync.ts",
    "env:report": "tsx scripts/env/report.ts",
    "scan:checklists": "tsx scripts/scan-checklists.ts",
    "do:sync-site": "node scripts/digitalocean/sync-site-config.mjs",
    "do:sync-cdn": "node scripts/digitalocean/sync-cdn-config.mjs",
    "doctl:sync-site": "node scripts/doctl/sync-site-config.mjs",
    "checklists": "node scripts/run-checklists.js",
    "go-live": "node scripts/run-checklists.js --checklist go-live",
    "export": "node scripts/npm-safe.mjs run build",
    "output": "node scripts/npm-safe.mjs -w apps/web run copy-static",
    "supabase:start": "supabase start",
    "supabase:stop": "supabase stop",
    "migrate:gen": "supabase migration new",
    "migrate:apply": "supabase migration up",
    "supabase:functions:deploy": "supabase functions deploy --project-ref $SUPABASE_PROJECT_REF --password $SUPABASE_DB_PASSWORD",
    "screenshot:install": "npx playwright install --with-deps",
    "screenshot:preview": "npx playwright show-report",
    "tunnel:functions": "node scripts/ngrok-http.mjs"
  },
  "devDependencies": {
    "chokidar-cli": "^3.0.0",
    "deno": "^2.5.0",
    "dotenv": "^17.2.3",
    "ngrok": "^5.0.0-beta.2",
    "supabase": "^2.47.2",
    "tsx": "^4.20.6",
    "yaml": "^2.8.1"
  },
  "dependencies": {
    "@auth/supabase-adapter": "^1.10.0",
    "@aws-sdk/client-s3": "^3.899.0",
    "@headlessui/react": "^2.2.9",
    "@heroicons/react": "^2.2.0",
    "@supabase/auth-helpers-react": "^0.5.0",
    "@supabase/ssr": "^0.7.0",
    "@tailwindcss/postcss": "^4.1.13",
    "@tanstack/react-query": "^5.90.2",
    "@upstash/redis": "^1.35.4",
    "@vercel/otel": "^1.13.0",
    "@web3-onboard/core": "2.2.12",
    "compressorjs": "^1.2.1",
    "framer-motion": "^12.23.22",
    "inngest": "^3.40.3",
    "lovable-tagger": "^1.1.10",
    "lucide-react": "^0.544.0",
    "mime-types": "^3.0.1",
    "next-auth": "^4.24.7",
    "posthog-js": "^1.268.8",
    "prismjs": "^1.30.0",
    "sonner": "^2.0.7"
  },
  "overrides": {
    "esbuild": "^0.25.10",
    "@esbuild-kit/core-utils": {
      "esbuild": "npm:esbuild@0.25.10"
    },
    "@esbuild-kit/core-utils@3.3.2": {
      "esbuild": "npm:esbuild@0.25.10"
    },
    "@esbuild-kit/esm-loader": {
      "esbuild": "npm:esbuild@0.25.10"
    },
    "@esbuild-kit/esm-loader@2.6.5": {
      "esbuild": "npm:esbuild@0.25.10"
    }
  }
}
