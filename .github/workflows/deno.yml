# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ["main"]
    paths:
      - 'supabase/**'
      - 'tests/**'
      - 'deno.json'
      - 'deno.lock'
      - '.github/workflows/deno.yml'
  pull_request:
    branches: ["main"]
    paths:
      - 'supabase/**'
      - 'tests/**'
      - 'deno.json'
      - 'deno.lock'
      - '.github/workflows/deno.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      - name: Verify formatting
        run: deno fmt check supabase/functions/telegram-bot/*.ts supabase/functions/telegram-bot/**/*.ts

      - name: Type check
        run: deno check supabase/functions/telegram-bot/*.ts supabase/functions/telegram-bot/**/*.ts

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A tests supabase/functions/_tests
