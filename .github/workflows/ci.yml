name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: read-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 22
      - run: npm ci
      - run: npm run lint

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: denoland/setup-deno@11b63cf76cfcafb4e43f97b6cad24d8e8438f62d
        with:
          deno-version: v1.x
      - run: deno test -A supabase/functions/_tests

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: denoland/setup-deno@11b63cf76cfcafb4e43f97b6cad24d8e8438f62d
        with:
          deno-version: v1.x
      - run: deno test -A tests

  deploy-staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [lint, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: supabase/setup-cli@b60b5899c73b63a2d2d651b1e90db8d4c9392f51
        with:
          version: latest
      - name: Deploy edge functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase functions deploy --project-id $SUPABASE_PROJECT_ID
      - name: Deploy telegram-webhook with JWT disabled
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase functions deploy telegram-webhook --no-verify-jwt --project-id $SUPABASE_PROJECT_ID
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 22
      - name: Set Telegram webhook
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_WEBHOOK_SECRET: ${{ secrets.TELEGRAM_WEBHOOK_SECRET }}
          SUPABASE_URL: https://${{ secrets.SUPABASE_PROJECT_ID }}.supabase.co
        run: npx tsx scripts/set-telegram-webhook.ts
      - run: npm ci
      - run: npm run build
      - name: Verify Mini App bundle
        run: node scripts/assert-miniapp-bundle.mjs
      - name: Deploy Mini App
        run: echo "Deploy Mini App to staging"

  deploy-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: supabase/setup-cli@b60b5899c73b63a2d2d651b1e90db8d4c9392f51
        with:
          version: latest
      - name: Deploy edge functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.PROD_SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.PROD_SUPABASE_PROJECT_ID }}
        run: |
          supabase functions deploy --project-id $SUPABASE_PROJECT_ID
      - name: Deploy telegram-webhook with JWT disabled
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.PROD_SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.PROD_SUPABASE_PROJECT_ID }}
        run: |
          supabase functions deploy telegram-webhook --no-verify-jwt --project-id $SUPABASE_PROJECT_ID
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 22
      - name: Set Telegram webhook
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.PROD_TELEGRAM_BOT_TOKEN }}
          TELEGRAM_WEBHOOK_SECRET: ${{ secrets.PROD_TELEGRAM_WEBHOOK_SECRET }}
          SUPABASE_URL: https://${{ secrets.PROD_SUPABASE_PROJECT_ID }}.supabase.co
        run: npx tsx scripts/set-telegram-webhook.ts
      - run: npm ci
      - run: npm run build
      - name: Verify Mini App bundle
        run: node scripts/assert-miniapp-bundle.mjs
      - name: Deploy Mini App
        run: echo "Deploy Mini App to production"
