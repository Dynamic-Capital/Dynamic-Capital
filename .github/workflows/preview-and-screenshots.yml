name: preview-and-screenshots

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: preview-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  preview-user:
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    name: preview-web
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          path: apps/web
          mode: preview

  preview-admin:
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    name: preview-landing
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          path: apps/landing
          mode: preview

  screenshots:
    if: ${{ github.event.pull_request.head.repo.fork == false && needs.preview-user.outputs.url != '' }}
    name: screenshots
    needs: [preview-user]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    outputs:
      artifact-url: ${{ steps.capture.outputs.artifact-url }}
    steps:
      - uses: actions/checkout@v4
      - id: capture
        uses: ./.github/actions/playwright-screenshots
        with:
          base-url: ${{ needs.preview-user.outputs.url }}
          routes: '[/, /login, /dashboard]'

  comment:
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    name: comment
    needs: [preview-user, preview-admin, screenshots]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Post preview comment
        uses: actions/github-script@v7
        with:
          script: |
            const marker = '<!-- preview-and-screenshots -->';
            const webUrl = process.env.WEB_URL || '';
            const landingUrl = process.env.LANDING_URL || '';
            const screenshotsUrl = process.env.SCREENSHOTS_URL || '';
            const lines = [
              marker,
              '### Preview Links',
              webUrl ? `- [Web preview](${webUrl})` : '- Web preview unavailable',
              landingUrl ? `- [Landing preview](${landingUrl})` : '- Landing preview unavailable',
              '',
              '### Screenshots',
              screenshotsUrl ? `[Download screenshots](${screenshotsUrl})` : 'No screenshots available.',
            ];
            const body = lines.join('\n');

            const { owner, repo, number } = context.issue;
            const comments = await github.rest.issues.listComments({ owner, repo, issue_number: number, per_page: 100 });
            const existing = comments.data.find((comment) => comment.body && comment.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number: number, body });
            }
        env:
          WEB_URL: ${{ needs.preview-user.outputs.url }}
          LANDING_URL: ${{ needs.preview-admin.outputs.url }}
          SCREENSHOTS_URL: ${{ needs.screenshots.outputs.artifact-url }}
