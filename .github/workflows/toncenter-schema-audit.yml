name: TONCenter Schema Audit

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *" # Daily at 06:00 UTC

permissions:
  contents: read

jobs:
  audit:
    name: Audit TONCenter schema
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx

      - name: Run schema guard
        env:
          # TONCENTER schema guard accounts:
          # - EQDSmz4RrDBFG-T1izwVJ7q1dpAq1mJTLrKwyMYJig6Wx_6y (DCT jetton master)
          # - EQAmzcKg3eybUNzsT4llJrjoDe7FwC51nSRhJEMACCdniYhq (DCT treasury jetton wallet)
          # - EQB3ncyBUTjZUA5EnFKR5_EnOMI9V1tTEAAPaiU71gc4TiUt (STON.fi TONâ†’DCT router)
          TONCENTER_SCHEMA_ACCOUNTS: |
            EQDSmz4RrDBFG-T1izwVJ7q1dpAq1mJTLrKwyMYJig6Wx_6y
            EQAmzcKg3eybUNzsT4llJrjoDe7FwC51nSRhJEMACCdniYhq
            EQB3ncyBUTjZUA5EnFKR5_EnOMI9V1tTEAAPaiU71gc4TiUt
          TONCENTER_API_KEY: ${{ secrets.TONCENTER_API_KEY }}
        run: |
          python -m dynamic_ton.schema_guard_runner \
            --limit 50 \
            --include-accounts \
            --output-json schema-report.json \
            --allow-drift

      - name: Upload schema report
        uses: actions/upload-artifact@v4
        with:
          name: toncenter-schema-report
          path: schema-report.json

      - name: Summarise schema audit
        run: |
          python - <<'PY'
          import json
          import os
          from pathlib import Path

          from dynamic_ton.schema_guard_runner import render_summary_markdown

          report_path = Path("schema-report.json")
          data = json.loads(report_path.read_text())

          summary_path = Path(os.environ["GITHUB_STEP_SUMMARY"])
          with summary_path.open("a", encoding="utf-8") as handle:
              handle.write(render_summary_markdown(data))

          if data.get("has_drift"):
              raise SystemExit("Schema drift detected; review unknown fields above.")
          PY
