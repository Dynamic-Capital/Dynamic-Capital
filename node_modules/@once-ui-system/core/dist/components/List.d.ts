import React from "react";
import type { ComponentPropsWithoutRef, ReactElement } from "react";
import { Column } from ".";
type ListElement = "ul" | "ol";
type ColumnProps = ComponentPropsWithoutRef<typeof Column>;
type InferListRef<T extends ListElement> = T extends "ol" ? HTMLOListElement : HTMLUListElement;
type BaseListProps<T extends ListElement> = Omit<ColumnProps, "as"> & {
    as?: T;
    children?: React.ReactNode;
    className?: string;
    style?: React.CSSProperties;
};
type ListComponent = (<T extends ListElement = "ul">(props: BaseListProps<T> & {
    ref?: React.Ref<InferListRef<T>>;
}) => ReactElement) & {
    displayName: string;
};
declare const List: ListComponent;
export { List };
//# sourceMappingURL=List.d.ts.map