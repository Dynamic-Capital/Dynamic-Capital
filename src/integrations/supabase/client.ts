// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qeejuomcapbdlhnjqjcc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFlZWp1b21jYXBiZGxobmpxamNjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQyMDE4MTUsImV4cCI6MjA2OTc3NzgxNX0.GfK9Wwx0WX_GhDIz1sIQzNstyAQIF2Jd6p7t02G44zk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// When building in a non-browser environment (e.g. during SSR or in tests),
// `localStorage` will not be defined. Guard access so bundling doesn't crash.
const isBrowser = typeof window !== "undefined" && typeof window.localStorage !== "undefined";
const storage: Storage | undefined = isBrowser
  ? window.localStorage
  : {
      getItem: () => null,
      setItem: () => {},
      removeItem: () => {},
    } as unknown as Storage;

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage,
    // Only persist sessions in environments where storage is available
    persistSession: isBrowser,
    autoRefreshToken: true,
  }
});