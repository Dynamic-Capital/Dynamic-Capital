// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('Missing Supabase environment variables');
}

// When building in a non-browser environment (e.g. during SSR or in tests),
// `localStorage` will not be defined. Guard access so bundling doesn't crash.
const isBrowser = typeof window !== "undefined" && typeof window.localStorage !== "undefined";
const storage: Storage | undefined = isBrowser
  ? window.localStorage
  : {
      getItem: () => null,
      setItem: () => {},
      removeItem: () => {},
    } as unknown as Storage;

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage,
    // Only persist sessions in environments where storage is available
    persistSession: isBrowser,
    autoRefreshToken: true,
  }
});
