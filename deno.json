{
  "tasks": {
    "check": "NODE_TLS_REJECT_UNAUTHORIZED=0 deno check --allow-import=deno.land,registry.npmjs.org,cdn.skypack.dev,lib.deno.dev,jsr.io --no-npm --unsafely-ignore-certificate-errors=deno.land,registry.npmjs.org,cdn.skypack.dev,lib.deno.dev,jsr.io supabase/functions/telegram-bot/*.ts supabase/functions/telegram-bot/**/*.ts",
    "serve": "supabase functions serve",
    "fmt": "bash -lc '$(bash scripts/deno_bin.sh) fmt --check .'",
    "fmt:write": "bash -lc '$(bash scripts/deno_bin.sh) fmt .'",
    "lint": "bash -lc '$(bash scripts/deno_bin.sh) lint'",
    "lint:fix": "bash scripts/fix_all.sh",
    "typecheck": "bash scripts/typecheck.sh",
    "ci": "bash scripts/ci.sh",
    "fix:repo": "bash scripts/fix_and_check.sh",
    "miniapp:build": "bash scripts/build-miniapp.sh",
    "miniapp:dev": "cd supabase/functions/miniapp && npm run dev",
    "miniapp:preview": "cd supabase/functions/miniapp && npm run preview",
    "miniapp:health": "deno run -A scripts/miniapp-health-check.ts",
    "miniapp:check": "deno run -A scripts/miniapp-domain-check.ts",
    "miniapp:deploy": "bash scripts/build-deploy-miniapp.sh",
    "miniapp:update-telegram": "deno run -A scripts/update-telegram-miniapp.ts",
    "miniapp:deploy-and-update": "deno task miniapp:deploy && deno task miniapp:update-telegram",
    "test": "deno test -A supabase/functions/_tests",
    "check:webhook": "deno run -A scripts/check-webhook.ts",
    "ping:webhook": "deno run -A scripts/ping-webhook.ts",
    "set:webhook": "deno run -A scripts/set-webhook.ts",
    "test:start": "deno test -A functions/_tests/start-command.test.ts",
    "guard:service-role": "deno run -A --no-npm scripts/guard-service-role.ts",
    "serve:miniapp-health": "supabase functions serve --no-verify-jwt miniapp-health",
    "test:miniapp-health": "deno test -A functions/_tests/miniapp-health.test.ts",
    "preflight:miniapp": "deno run -A scripts/assert-miniapp-config.ts",
    "miniapp:setmenu": "deno run -A scripts/set-chat-menu-button.ts",
    "audit:edge-hosts": "deno run -A scripts/audit-edge-hosts.ts",
    "linkage:check": "deno run -A scripts/check-linkage.ts",
    "serve:linkage-audit": "supabase functions serve --no-verify-jwt linkage-audit",
    "guard:env": "deno run -A scripts/guard-env-usage.ts",
    "edge:call": "deno run -A scripts/call-edge.ts",
    "edge:deploy:verify": "npx supabase functions deploy verify-initdata",
    "edge:deploy:health": "npx supabase functions deploy miniapp-health",
    "tg:keeper:deploy": "npx supabase functions deploy telegram-webhook-keeper",
    "tg:keeper:run": "curl -s https://your-project-ref.functions.supabase.co/telegram-webhook-keeper | jq .",
    "edge:deploy:plans": "npx supabase functions deploy plans",
    "edge:deploy:checkout": "npx supabase functions deploy checkout-init",
    "edge:deploy:uploadurl": "npx supabase functions deploy receipt-upload-url",
    "edge:deploy:receipt": "npx supabase functions deploy receipt-submit",
    "edge:deploy:review": "npx supabase functions deploy admin-review-payment",
    "edge:deploy:cron": "npx supabase functions deploy subscriptions-cron",
    "edge:deploy:admin-check": "npx supabase functions deploy admin-check",
    "edge:deploy:admin-list": "npx supabase functions deploy admin-list-pending",
    "edge:deploy:admin-act": "npx supabase functions deploy admin-act-on-payment",
    "edge:deploy:admin-logs": "npx supabase functions deploy admin-logs",
    "edge:deploy:analytics": "npx supabase functions deploy analytics-collector",
    "edge:deploy:ops": "npx supabase functions deploy ops-health",
    "edge:deploy:smoke": "npx supabase functions deploy miniapp-smoke",
    "tg:menu:get": "deno run -A scripts/tg-chat-menu.ts get",
    "tg:menu:set": "deno run -A scripts/tg-chat-menu.ts set",
    "miniapp:audit": "deno run -A scripts/miniapp-audit.ts",
    "edge:deploy:promo": "npx supabase functions deploy promo-validate && npx supabase functions deploy promo-redeem && npx supabase functions deploy promo-airdrop",
    "edge:deploy:ref": "npx supabase functions deploy referral-link",
    "edge:deploy:broadcast": "npx supabase functions deploy broadcast-dispatch && npx supabase functions deploy broadcast-cron",
    "edge:deploy:funnel": "npx supabase functions deploy funnel-track",
    "edge:deploy:security": "npx supabase functions deploy admin-bans && npx supabase functions deploy data-retention-cron && npx supabase functions deploy rotate-webhook-secret",
    "edge:deploy:ocr": "npx supabase functions deploy receipt-ocr",
    "edge:deploy:auto": "npx supabase functions deploy payments-auto-review",
    "edge:deploy:sync": "npx supabase functions deploy sync-audit",
    "edge:deploy:bot": "npx supabase functions deploy telegram-bot",
    "edge:deploy:mini": "npx supabase functions deploy miniapp",
    "make:initdata": "deno run -A scripts/make-initdata.ts"
  },
  // Schedules:
  // Retention: daily at 03:10 (server time)
  // supabase functions schedule create "10 3 * * *" data-retention-cron
  // Optional monthly rotation (manual trigger recommended first time)
  // supabase functions schedule create "0 2 1 * *" rotate-webhook-secret
  // Auto-review: every 10 minutes
  // supabase functions schedule create "*/10 * * * *" payments-auto-review
  // Telegram webhook keeper: every 15 minutes
  // supabase functions schedule create "*/15 * * * *" telegram-webhook-keeper
  "lock": false,
  "nodeModulesDir": "none",
  "compilerOptions": {
    "types": [
      "./apps/web/types/tesseract.d.ts",
      "./apps/web/types/deno.d.ts",
      "./apps/web/types/import-meta.d.ts",
      "./apps/web/types/sentry-nextjs.d.ts",
      "./apps/web/types/@types/node/index.d.ts"
    ]
  },
  "fmt": {
    "include": ["apps", "supabase", "scripts", "db", "docs"],
    "exclude": ["supabase/functions/miniapp/static"]
  },
  "importMap": "./supabase/functions/telegram-bot/vendor/import_map.json",
  "test": {
    "include": [
      "tests/**/*.test.ts",
      "tests/**/*.test.tsx",
      "dynamic-capital-ton/apps/tests/**/*.test.ts"
    ]
  },
  "deploy": {
    "include": [
      "supabase/functions/miniapp/static/**"
    ]
  }
}
